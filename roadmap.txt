TypeScript × ルートアプリ開発ロードマップ（やさしい版）
🌱 Stage 1：TypeScriptの基礎（2〜3週間）

目的：TSの文法と型の感覚を体に入れる。
JSXやReactはまだ使わない。

学ぶこと

✅ 変数と型（string / number / boolean / array / object）

✅ 関数の定義と戻り値の型

✅ 配列操作（map, filter, reduce）

✅ 条件分岐（if / switch）

✅ 型の組み合わせ（Union, Optional, 型エイリアス）

✅ オブジェクトとループ（for...of / forEach）

実践課題例

計算ツール（合計・平均）

配列から特定のデータを探す（findUserByName）

ストリング整形（例：タイトル文字列の加工）

ゴール

function を自分で安全に書ける

どんな変数にも型をつけられる

コンソールに結果を出せる

⚙️ Stage 2：モジュール化と実用コード（2週間）

目的：複数ファイルに分けて使えるようにする。
スクリプトからアプリ構造へ近づく。

学ぶこと

✅ import / export の書き方

✅ モジュール（機能ごとにファイルを分ける）

✅ データ構造を扱う（ルート情報、位置データなど）

✅ エラー処理（try/catch）

実践課題例

「ルート情報リスト」を配列として定義

指定ルートを検索・抽出

距離や所要時間を計算する関数を作る

ゴール

import / export でコードを整理できる

「ルートデータ」を処理する関数を自作できる

🗺️ Stage 3：React入門（2〜3週間）

目的：画面（UI）にTypeScriptのロジックを組み込む。
JSX → TSX を使う段階。

学ぶこと

✅ JSX / TSX の書き方

✅ Reactの基本構造（コンポーネント・props・state）

✅ useState / useEffect（状態管理と副作用）

✅ イベント処理（クリック・入力）

✅ データの表示（地図やルートの一覧）

実践課題例

簡単な「ルート一覧表示アプリ」

クリックでルート名を選択して表示

TypeScriptの型をReactコンポーネントに適用

ゴール

.tsx ファイルでReactコンポーネントを理解できる

props や state の型を自分で定義できる

☁️ Stage 4：データ保存と外部連携（2〜3週間）

目的：Supabase（クラウドDB）や外部APIと連携し、
本格的なルート管理アプリに発展させる。

学ぶこと

✅ Supabase の使い方（認証・DB接続・データ取得）

✅ API呼び出し（fetch）

✅ JSONデータの型定義（type Route = { id: number; name: string; ... }）

✅ 非同期処理（async/await）

実践課題例

Supabaseから「ルートリスト」を取得して表示

新しいルートを追加・削除するフォームを作成

GPSデータ（緯度経度）のJSONを取得・整形

ゴール

外部データと通信できる

DBデータを安全に扱える（型定義付き）

🚀 Stage 5：アプリ完成・発表（最終2週間）

目的：自分のルートアプリ MVP（最小機能版）を完成させる。

機能例

ルートリストの表示・追加・削除

ルートの距離・所要時間計算

地図（LeafletやMapLibre）でルート描画

ログイン機能（Supabase Auth）

ゴール

TypeScript中心で安全・整理されたコードを書ける

React＋Supabaseを通じて、1つのPWAとして動かせる

自分のアイデアで機能を拡張できる

💬 補足：進め方の目安
学習時間	内容
平日20分（デイリー課題）	TSの基礎～応用
週末1時間	小アプリ実践（集計・表示など）
月末	ルートアプリの小機能を完成させる